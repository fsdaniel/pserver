#include <cstring>

#include "globals.hpp"

static const short LUT[512] = {
	0x37, 0xC5, 0x60, 0x72, 0xCD, 0xA5, 0xB, 0x6, 0xD1, 0xF9, 0xCB, 0x3C, 0x57,
	0xC, 0xD, 0x1B, 0x79, 0x1E, 0x2D, 0x72, 0xB4, 0x4, 0xB3, 0x60, 0xB2, 0x80, 0xDD,
	0x89, 0xA0, 0xED, 0xF2, 0x84, 0x7C, 0xFA, 0xC4, 0x99, 0x9F, 0x27, 0xED, 0xDE, 0x6C,
	0xDE, 0x1E, 0xB8, 0x48, 0x34, 0x64, 0x29, 0x76, 0xA5, 0x1, 0x86, 0x21, 0xB, 0xBF,
	0xB0, 0x99, 0xED, 0x20, 0x2D, 0x75, 0x42, 0x4C, 0x6A, 0xC0, 0x75, 0x7E, 0x89, 0x33,
	0, 0x65, 0x82, 0x3, 0x4, 0x93, 0x3D, 0x57, 0x4A, 0xAA, 0x2F, 0xA5, 0xD5, 0x74, 0xBD,
	0xD7, 0x31, 0xDA, 0x83, 0x96, 0xE2, 0x18, 0x59, 0xEE, 0x20, 0x53, 0x24, 0x3D, 0x88,
	0xAB, 0x77, 0x4A, 0x99, 0xB9, 0x4, 0xE1, 0xD3, 0x9D, 0xD0, 0x89, 0xBF, 0x89, 0x44,
	0x32, 0x64, 0xC7, 0x2E, 0x93, 0x33, 0xD5, 0x6B, 0x29, 0x95, 0xBB, 0x3B, 0x82, 0x96,
	0x3D, 0x60, 0x26, 0xD0, 0x84, 0x5B, 0x45, 0x5A, 0x8B, 0x4C, 0x5A, 0x3C, 0x5B, 0x8A,
	0x58, 0x94, 0xB8, 0x9B, 0x13, 0xDB, 0x6B, 0xBE, 0x1A, 0xA, 0x60, 0x73, 0x74, 0x55,
	0xE7, 0x59, 0xB0, 0xBA, 0x44, 0x76, 0xAC, 0xE2, 0x85, 0x16, 0xC4, 0x10, 0x53, 0x97,
	0x38, 0xC0, 0xEE, 0xA8, 0x6, 0x42, 0xA9, 0x1B, 0xBD, 0xD2, 0x97, 0xE2, 0xDD, 0x25,
	0xDA, 0xA5, 0x44, 0xC7, 0x20, 0x51, 0x3A, 0xFB, 0x92, 0x94, 0x17, 0x71, 0x2F, 0x2,
	0x55, 0x60, 0x96, 0xB5, 0x26, 0x4C, 0x57, 0xF7, 0x8B, 0x46, 0x78, 0x19, 0xE2, 0xB6,
	0x60, 0x8F, 0xD0, 0xF7, 0x94, 0x69, 0x4, 0x2D, 0xC5, 0x41, 0xD2, 0x40, 0x83, 0x89,
	0x67, 0xC7, 0xEE, 0xF5, 0x5D, 0xA7, 0x89, 0x31, 0xD7, 0x92, 0x52, 0x57, 0xD8, 0xA7,
	0x10, 0xF6, 0xD3, 0x14, 0x8A, 0x12, 0x76, 0x7F, 0x1A, 0xE2, 0x17, 0xD5, 0xB1, 0x1FF,
	0x7E, 0xC5, 0x5B, 0x1D, 0xC3, 0xF9, 0x35, 0xD, 0xA0, 0x48, 0x3D, 0xB9, 0xB8, 0x34,
	0x15, 0x73, 0xD1, 0x3F, 0x3E, 0x35, 0xF7, 0xB0, 0xB3, 0x5C, 0xB8, 0x55, 0xC7, 0xB,
	0x59, 0x8B, 0x40, 0x66, 0x31, 0x9C, 0x57, 0x84, 0x45, 0xA3, 0xE8, 0xBE, 0x80, 0x90,
	0x15, 0xB0, 0xEB, 0xAE, 0xAB, 0xC8, 0xF4, 0xA5, 0x2E, 0x23, 0x8B, 0x3D, 0xC, 0xB5,
	0xCC, 0x1, 0xCA, 0x9F, 0xAB, 0x39, 0x67, 0xC6, 0x62, 0xAF, 0x53, 0x67, 0x7E, 0xA1,
	0xEA, 0x1D, 0xF0, 0x1FC, 0x18, 0x36, 0x1B, 0x97, 0x41, 0x3F, 0x39, 0xF0, 0x38, 0x22,
	0xAE, 0xB7, 0x8F, 0xDF, 0xC2, 0x1FF, 0xB6, 0x50, 0x61, 0xA9, 0x55, 0x4A, 0x46, 0xB5,
	0xCA, 0xFA, 0x5C, 0xAE, 0xDB, 0x52, 0xE, 0x34, 0x39, 0x4D, 0x8F, 0xD2, 0x51, 0x8B,
	0xF8, 0x3D, 0x78, 0x81, 0x8C, 0xEC, 0x8B, 0xE7, 0xF1, 0x4B, 0xE8, 0x4A, 0xC9, 0xA,
	0xF9, 0x1A, 0x6C, 0x56, 0x37, 0xB9, 0xBC, 0xEF, 0x45, 0xCC, 0xE3, 0xE3, 0xD7, 0x26,
	0x67, 0xD6, 0x3A, 0xEE, 0x27, 0x5D, 0x7D, 0x89, 0xBF, 0x30, 0x11, 0x74, 0xF9, 0xAC,
	0x80, 0xA, 0x73, 0xF2, 0x8C, 0x22, 0x55, 0x35, 0x9D, 0x80, 0x73, 0x84, 0x1B, 0xF3,
	0xA1, 0xF2, 0x8, 0x59, 0x2C, 0x1E, 0x5, 0x75, 0x5B, 0xB0, 0xF, 0xE9, 0x94, 0xEB, 0x75,
	0xD4, 0xE7, 0xEB, 0x4F, 0x6C, 0x36, 0xE5, 0x4, 0x31, 0x50, 0x6E, 0x1D, 0xB0, 0xC6,
	0xC3, 0xE8, 0x31, 0x8E, 0xBD, 0x31, 0x31, 0xA2, 0x85, 0x97, 0x1E, 0xDF, 0xC1, 0xA7,
	0x49, 0x35, 0xD4, 0xA0, 0x49, 0x8A, 0x40, 0x83, 0x4, 0xBD, 0x89, 0x34, 0x9, 0x6E,
	0x8B, 0xB, 0x8A, 0xB, 0x9A, 0x1, 0xA9, 0x88, 0xEB, 0xB8, 0xC3, 0x23, 0x9E, 0x69, 0x63,
	0xBE, 0x7C, 0x7, 0xE3, 0x11, 0x84, 0x17, 0xC7, 0xDA, 0x27, 0x51, 0x66, 0x85, 0x4,
	0x62, 0x91, 0xDF, 0x13, 0x22, 0xB9
};

const char* Message::Serialise() const
{
	char *out = new char[size+12];
	std::memmove(out, &type, 4);
	std::memmove(out+4, &size, 4);
	std::memmove(out+8, &refnum, 4);
	if (size) std::memmove(out+12, data, size);
	return out;
}

void Prop::ComputeCRC()
{
	crc = 0xD9216290;
	if (!size) return;
	
	for (unsigned i = 0; i < size; i++)
		crc = ((crc << 1) | ((crc & 0x80000000) ? 1 : 0)) ^ data[i];
}

void Encode(char *buf, short len)
{
	short rc = 0;
	char b, last = 0;
	
	for (short i = len-1; i >= 0; i--)
	{
		b = buf[i];
		buf[i] = (char)(b ^ LUT[rc++] ^ last);
		last = (char)(buf[i] ^ LUT[rc++]);
	}
}

void Decode(char *buf, short len)
{
	char last = 0, b;
	short rc = 0;
	
	for (short i = len-1; i >= 0; i--)
	{
		b = buf[i];
		buf[i] = (char)(b ^ LUT[rc++] ^ last);
		last = (char)(b ^ LUT[rc++]);
	}
}
